/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*-  */
/*
 * rune
 * Copyright (C) 2012 Julien SOSTHÃˆNE <juliensos10@gmail.com>
 * 
 * rune is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * rune is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "edition-view.h"


StructureView::StructureView(Project* cProject){
	this->currentProject = cProject;
	ProjectStructure projectStructure;
	Glib::RefPtr<Gtk::TreeStore> refStructure =
    Gtk::TreeStore::create(projectStructure);
	/*Gtk::TreeModel::iterator iter = refStructure->append();
	Gtk::TreeModel::Row row = *iter;
	row[projectStructure.name] = "Book 1";
	row[projectStructure.type] = Gdk::Pixbuf::create_from_file("images/book.svg", 20, 20, true);
	row[projectStructure.achievement] = 40;
	Gtk::TreeModel::iterator iter_child = refStructure->append(row.children());
	Gtk::TreeModel::Row underRow = *iter_child;
	underRow[projectStructure.name] = "Scene 1";
	underRow[projectStructure.type] = Gdk::Pixbuf::create_from_file("images/scene.svg", 20, 20, true);
	underRow[projectStructure.achievement] = 30;*/
	Gtk::TreeView* structureView = Gtk::manage(new Gtk::TreeView);
	structureView->set_model(refStructure);
	Gtk::TreeView::Column* symbol = 
		Gtk::manage(new Gtk::TreeView::Column(""));
	symbol->pack_start(projectStructure.type,true);
	symbol->pack_end(projectStructure.name,true);
	structureView->append_column(*symbol);

	//Display a progress bar instead of a decimal number:
	Gtk::CellRendererProgress* cell = Gtk::manage(new Gtk::CellRendererProgress);
	int cols_count = structureView->append_column("", *cell);
	Gtk::TreeViewColumn* pColumn = structureView->get_column(cols_count - 1);
	if(pColumn)
  {
    pColumn->add_attribute(cell->property_value(), projectStructure.achievement);
  }

	
	add(*structureView);
	set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);

	show_all();
}
